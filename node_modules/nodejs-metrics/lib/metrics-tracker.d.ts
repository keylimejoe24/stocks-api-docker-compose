import { IIncrementCounterOptions, IIncrementDecrementGaugeOptions, IMetricsDictionary, IMetricsTracker, IMetricsTrackerOptions, ISetGaugeOptions, ITrackHistogramDurationOptions } from "./types";
export declare class MetricsTracker implements IMetricsTracker {
    metrics?: IMetricsDictionary;
    constructor({ metrics }: IMetricsTrackerOptions);
    trackHistogramDuration<T>({ metricName, labels, action, handleResult }: ITrackHistogramDurationOptions<T>): Promise<T>;
    incrementCounter({ count, metricName, labels }: IIncrementCounterOptions): void;
    incrementGauge({ count, metricName, labels }: IIncrementDecrementGaugeOptions): void;
    decrementGauge({ count, metricName, labels }: IIncrementDecrementGaugeOptions): void;
    setGauge({ count, metricName, labels }: ISetGaugeOptions): void;
    private verifyMetric;
}
